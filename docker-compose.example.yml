version: "3.3"
services:
  node:
    container_name: framework_node
    build:
      context: ./
      dockerfile: ./docker/nodeServer/Dockerfile
    ports:
      - "${APP_PORT}:${APP_PORT}"
    environment:
      DATABASE_PORT: ${DATABASE_PORT}
    volumes:
      - ".:/app"
      - "/app/node_modules"
    stdin_open: true
    tty: true
    networks:
      framework_net:
        ipv4_address: 171.22.1.1
  mongo:
    container_name: framework_mongo
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${DATABASE_USER}"
      MONGO_INITDB_ROOT_PASSWORD: "${DATABASE_PASSWORD}"
    networks:
      framework_net:
        ipv4_address: 171.22.1.2
  redis:
    container_name: framework_redis
    image: redis
    restart: on-failure
    ports:
      - "6379:6379"
    networks:
      framework_net:
        ipv4_address: 171.22.1.3
  nginx:
    container_name: framework_nginx
    build:
      context: ./docker/nginxServer
      dockerfile: Dockerfile
    restart: on-failure
    volumes:
      - ./docker/nginxServer/config/sites-available:/etc/nginx/sites-available
      - ./docker/nginxServer/config/sites-available:/etc/nginx/sites-enabled
      - ./docker/nginxServer/config/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginxServer/config/env.conf:/etc/nginx/env.conf
      - ./public:/var/www/framework/public
      - ./docker/nginxServer/logs:/var/log/nginx
      - /var/www/framework/cache
    ports:
      - "80:80"
      - "443:443"
    networks:
      framework_net:
        ipv4_address: 171.22.1.4
networks:
  framework_net:
    name: "framework_net"
    ipam:
      driver: default
      config:
        - subnet: 171.22.0.0/16
